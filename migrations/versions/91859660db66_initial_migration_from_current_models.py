"""Initial migration from current models

Revision ID: 91859660db66
Revises: 
Create Date: 2025-08-11 23:20:57.172287

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '91859660db66'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_title_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('statement_name', sa.String(), nullable=True),
    sa.Column('major_category', sa.String(), nullable=True),
    sa.Column('middle_category', sa.String(), nullable=True),
    sa.Column('minor_category', sa.String(), nullable=True),
    sa.Column('breakdown_document', sa.String(), nullable=True),
    sa.Column('master_type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('master_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_hash', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_hash')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('corporate_number', sa.String(length=13), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=False),
    sa.Column('company_name_kana', sa.String(length=100), nullable=False),
    sa.Column('zip_code', sa.String(length=7), nullable=False),
    sa.Column('prefecture', sa.String(length=10), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('homepage', sa.String(length=200), nullable=True),
    sa.Column('establishment_date', sa.Date(), nullable=False),
    sa.Column('capital_limit', sa.Boolean(), nullable=True),
    sa.Column('is_supported_industry', sa.Boolean(), nullable=True),
    sa.Column('is_not_excluded_business', sa.Boolean(), nullable=True),
    sa.Column('is_excluded_business', sa.Boolean(), nullable=True),
    sa.Column('industry_type', sa.String(length=50), nullable=True),
    sa.Column('industry_code', sa.String(length=10), nullable=True),
    sa.Column('reference_number', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('accounting_period_start', sa.String(length=10), nullable=True),
    sa.Column('accounting_period_end', sa.String(length=10), nullable=True),
    sa.Column('term_number', sa.Integer(), nullable=True),
    sa.Column('office_count', sa.String(length=10), nullable=True),
    sa.Column('declaration_type', sa.String(length=10), nullable=True),
    sa.Column('tax_system', sa.String(length=10), nullable=True),
    sa.Column('representative_name', sa.String(length=100), nullable=True),
    sa.Column('representative_kana', sa.String(length=100), nullable=True),
    sa.Column('representative_position', sa.String(length=100), nullable=True),
    sa.Column('representative_status', sa.String(length=20), nullable=True),
    sa.Column('representative_zip_code', sa.String(length=7), nullable=True),
    sa.Column('representative_prefecture', sa.String(length=10), nullable=True),
    sa.Column('representative_city', sa.String(length=50), nullable=True),
    sa.Column('representative_address', sa.String(length=200), nullable=True),
    sa.Column('accounting_manager_name', sa.String(length=100), nullable=True),
    sa.Column('accounting_manager_kana', sa.String(length=100), nullable=True),
    sa.Column('closing_date', sa.String(length=10), nullable=True),
    sa.Column('is_corp_tax_extended', sa.Boolean(), nullable=True),
    sa.Column('is_biz_tax_extended', sa.Boolean(), nullable=True),
    sa.Column('employee_count_at_eoy', sa.Integer(), nullable=True),
    sa.Column('tax_accountant_name', sa.String(length=100), nullable=True),
    sa.Column('tax_accountant_phone', sa.String(length=20), nullable=True),
    sa.Column('tax_accountant_zip', sa.String(length=7), nullable=True),
    sa.Column('tax_accountant_prefecture', sa.String(length=10), nullable=True),
    sa.Column('tax_accountant_city', sa.String(length=50), nullable=True),
    sa.Column('tax_accountant_address', sa.String(length=200), nullable=True),
    sa.Column('refund_bank_name', sa.String(length=100), nullable=True),
    sa.Column('refund_branch_name', sa.String(length=100), nullable=True),
    sa.Column('refund_account_type', sa.String(length=10), nullable=True),
    sa.Column('refund_account_number', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('corporate_number')
    )
    op.create_table('user_account_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('software_name', sa.String(length=50), nullable=False, comment='会計ソフト名 (例: moneyforward)'),
    sa.Column('original_account_name', sa.String(length=255), nullable=False, comment='ユーザーファイル上の勘定科目名'),
    sa.Column('master_account_id', sa.Integer(), nullable=False, comment='紐付け先のマスター勘定科目ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['master_account_id'], ['account_title_master.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'original_account_name', name='_user_original_account_uc')
    )
    op.create_table('accounts_payable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('partner_name', sa.String(length=100), nullable=False),
    sa.Column('is_subsidiary', sa.Boolean(), nullable=True),
    sa.Column('partner_address', sa.String(length=200), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts_receivable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('partner_name', sa.String(length=100), nullable=False),
    sa.Column('registration_number', sa.String(length=20), nullable=True),
    sa.Column('is_subsidiary', sa.Boolean(), nullable=True),
    sa.Column('partner_address', sa.String(length=200), nullable=False),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('borrowing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lender_name', sa.String(length=100), nullable=False),
    sa.Column('is_subsidiary', sa.Boolean(), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('interest_rate', sa.Float(), nullable=False),
    sa.Column('paid_interest', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deposit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('financial_institution', sa.String(length=100), nullable=False),
    sa.Column('branch_name', sa.String(length=100), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('account_number', sa.String(length=50), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('executive_compensation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shareholder_name', sa.String(length=100), nullable=False),
    sa.Column('relationship', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('base_salary', sa.Integer(), nullable=True),
    sa.Column('other_allowances', sa.Integer(), nullable=True),
    sa.Column('total_compensation', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fixed_asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_type', sa.String(length=50), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('unit_price', sa.Integer(), nullable=False),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('land_rent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('lessor_name', sa.String(length=100), nullable=False),
    sa.Column('property_details', sa.String(length=200), nullable=True),
    sa.Column('rent_paid', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loans_receivable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('borrower_name', sa.String(length=100), nullable=False),
    sa.Column('is_subsidiary', sa.Boolean(), nullable=True),
    sa.Column('borrower_address', sa.String(length=200), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('interest_rate', sa.Float(), nullable=False),
    sa.Column('received_interest', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('miscellaneous',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('details', sa.String(length=200), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes_payable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payee', sa.String(length=100), nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes_receivable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drawer', sa.String(length=100), nullable=False),
    sa.Column('registration_number', sa.String(length=20), nullable=True),
    sa.Column('issue_date', sa.String(length=10), nullable=False),
    sa.Column('due_date', sa.String(length=10), nullable=False),
    sa.Column('payer_bank', sa.String(length=100), nullable=False),
    sa.Column('payer_branch', sa.String(length=100), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('discount_bank', sa.String(length=100), nullable=True),
    sa.Column('discount_branch', sa.String(length=100), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('office',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('zip_code', sa.String(length=7), nullable=True),
    sa.Column('prefecture', sa.String(length=50), nullable=True),
    sa.Column('municipality', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('opening_date', sa.Date(), nullable=True),
    sa.Column('closing_date', sa.Date(), nullable=True),
    sa.Column('employee_count', sa.Integer(), nullable=True),
    sa.Column('office_count', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('security',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('security_type', sa.String(length=50), nullable=False),
    sa.Column('issuer', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shareholder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=20), nullable=False),
    sa.Column('is_officer', sa.Boolean(), nullable=True),
    sa.Column('joined_date', sa.Date(), nullable=True),
    sa.Column('relationship', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('shares_held', sa.Integer(), nullable=True),
    sa.Column('voting_rights', sa.Integer(), nullable=True),
    sa.Column('officer_position', sa.String(length=100), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temporary_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('partner_name', sa.String(length=100), nullable=False),
    sa.Column('registration_number', sa.String(length=20), nullable=True),
    sa.Column('is_subsidiary', sa.Boolean(), nullable=True),
    sa.Column('partner_address', sa.String(length=200), nullable=True),
    sa.Column('relationship', sa.String(length=100), nullable=True),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('transaction_details', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temporary_receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('partner_name', sa.String(length=100), nullable=False),
    sa.Column('balance_at_eoy', sa.Integer(), nullable=False),
    sa.Column('transaction_details', sa.String(length=200), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('temporary_receipt')
    op.drop_table('temporary_payment')
    op.drop_table('shareholder')
    op.drop_table('security')
    op.drop_table('office')
    op.drop_table('notes_receivable')
    op.drop_table('notes_payable')
    op.drop_table('miscellaneous')
    op.drop_table('loans_receivable')
    op.drop_table('land_rent')
    op.drop_table('inventory')
    op.drop_table('fixed_asset')
    op.drop_table('executive_compensation')
    op.drop_table('deposit')
    op.drop_table('borrowing')
    op.drop_table('accounts_receivable')
    op.drop_table('accounts_payable')
    op.drop_table('user_account_mapping')
    op.drop_table('company')
    op.drop_table('user')
    op.drop_table('master_version')
    op.drop_table('account_title_master')
    # ### end Alembic commands ###
