"""Database schema migration.

Revision ID: d70af01038af
Revises: 91859660db66
Create Date: 2025-08-12 00:06:07.647579
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd70af01038af'
down_revision = '91859660db66'
branch_labels = None
depends_on = None


def upgrade():
    # Make rename robust against existing state
    bind = op.get_bind()
    insp = sa.inspect(bind)
    cols = [c['name'] for c in insp.get_columns('shareholder')]
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        if 'is_officer' in cols and 'is_controlled_company' not in cols:
            batch_op.alter_column('is_officer', new_column_name='is_controlled_company')
        elif 'is_controlled_company' not in cols:
            batch_op.add_column(sa.Column('is_controlled_company', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # Reverse operation robustly
    bind = op.get_bind()
    insp = sa.inspect(bind)
    cols = [c['name'] for c in insp.get_columns('shareholder')]
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        if 'is_controlled_company' in cols and 'is_officer' not in cols:
            batch_op.alter_column('is_controlled_company', new_column_name='is_officer')
        elif 'is_officer' not in cols:
            batch_op.add_column(sa.Column('is_officer', sa.Boolean(), nullable=True))

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        batch_op.alter_column('is_controlled_company', new_column_name='is_officer')

    # ### end Alembic commands ###
