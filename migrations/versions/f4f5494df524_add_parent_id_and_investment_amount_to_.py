"""Add parent_id and investment_amount to Shareholder

Revision ID: f4f5494df524
Revises: d70af01038af
Create Date: 2025-08-12 17:01:27.473797

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f4f5494df524'
down_revision = 'd70af01038af'
branch_labels = None
depends_on = None


def upgrade():
    # Idempotent + SQLite-safe: add columns if missing; add FK only on non-SQLite
    bind = op.get_bind()
    insp = sa.inspect(bind)
    is_sqlite = bind.dialect.name == 'sqlite'

    # current columns
    cols = {c['name'] for c in insp.get_columns('shareholder')}

    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        if 'investment_amount' not in cols:
            batch_op.add_column(sa.Column('investment_amount', sa.Integer(), nullable=True))
        if 'parent_id' not in cols:
            batch_op.add_column(sa.Column('parent_id', sa.Integer(), nullable=True))

    if not is_sqlite:
        # refresh metadata after potential add
        cols = {c['name'] for c in sa.inspect(bind).get_columns('shareholder')}
        fk_names = {fk.get('name') for fk in sa.inspect(bind).get_foreign_keys('shareholder')}
        if 'parent_id' in cols and 'fk_shareholder_parent_id' not in fk_names:
            op.create_foreign_key('fk_shareholder_parent_id', 'shareholder', 'shareholder', ['parent_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    bind = op.get_bind()
    insp = sa.inspect(bind)
    is_sqlite = bind.dialect.name == 'sqlite'

    # Drop FK first on non-SQLite if present
    if not is_sqlite:
        fk_names = {fk.get('name') for fk in insp.get_foreign_keys('shareholder')}
        if 'fk_shareholder_parent_id' in fk_names:
            op.drop_constraint('fk_shareholder_parent_id', 'shareholder', type_='foreignkey')

    # Then drop columns if they exist
    cols = {c['name'] for c in sa.inspect(bind).get_columns('shareholder')}
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        if 'parent_id' in cols:
            batch_op.drop_column('parent_id')
        if 'investment_amount' in cols:
            batch_op.drop_column('investment_amount')

    bind = op.get_bind()
    is_sqlite = bind.dialect.name == 'sqlite'
    if not is_sqlite:
        op.drop_constraint('fk_shareholder_parent_id', 'shareholder', type_='foreignkey')
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        batch_op.drop_column('parent_id')
        batch_op.drop_column('investment_amount')

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shareholder', schema=None) as batch_op:
        batch_op.drop_constraint('fk_shareholder_parent_id', type_='foreignkey')
        batch_op.drop_column('parent_id')
        batch_op.drop_column('investment_amount')

    # ### end Alembic commands ###
